<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="EnvDTE" #>
<#@ assembly name="EnvDTE" #>
<#@ include file="EnvDteHelper.ttinclude" #><#+
void GenerateWcfService(string clsName,DTE dte)
{ 
    var iName= "I"+clsName;
    var cs= iName+".cs";
    var iFile=dte.Solution.FindProjectItem(cs);
    var iCode=iFile.FileCodeModel;
    var ns=iCode.CodeElements.Cast<CodeElement>().First(ce=>ce.Kind== vsCMElement.vsCMElementNamespace);
    var cls=ns.Children.Cast<CodeElement>().First(ce=>ce.Kind==vsCMElement.vsCMElementInterface);
    var props= cls.Children.Cast<CodeProperty>();
    var propNames= props.Select(cp=>cp.Name);
#>using System;
using System.Data.Services;
using System.Data.Services.Common;

using Microsoft.Practices.ServiceLocation;

using Contracts;

namespace PaySpan.Payer.WebService
{
    [System.ServiceModel.ServiceBehavior(IncludeExceptionDetailInFaults = true)]
    public class <#=clsName#> : WcfDataService<<#=iName#>>
    {
        public static void InitializeService(DataServiceConfiguration config)
        {
            config.DataServiceBehavior.MaxProtocolVersion = DataServiceProtocolVersion.V3;
<#+
            foreach (var p in propNames.OrderBy(a=>a))
{
#>
            config.SetEntitySetAccessRule(LinqOp.PropertyOf<<#=iName#>>(p => p.<#=p#>).Name, EntitySetRights.AllRead);
<#+
}
#>

            config.UseVerboseErrors = true;
        }

        protected override <#=iName#> CreateDataSource()
        {
            return ServiceLocator.Current.GetInstance<<#=iName#>>();
        }
    }
}
<#+ } #>